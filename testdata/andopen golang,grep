./testdata/golang:The Go programming language is an open source project to make programmers more
./testdata/golang:Go is expressive, concise, clean, and efficient. Its concurrency mechanisms
./testdata/golang:make it easy to write programs that get the most out of multicore and networked
./testdata/golang:machines, while its novel type system enables flexible and modular program
./testdata/golang:garbage collection and the power of run-time reflection. It's a fast,
./testdata/grep:Grep was created by Ken Thompson as a standalone application adapted from the
./testdata/grep:the command g/re/p would print all lines matching a previously defined pattern.
./testdata/grep:standard input. By default, it reports matching lines on standard output, but
./testdata/grep:specific modes of operation may be chosen with command line options.  A simple
./testdata/grep:The name of grep derives from a usage in the Unix text editor ed and related
./testdata/grep:programs. Before grep existed as a separate command, the same effect might have
./testdata/grep:where the second line is the command given to ed to print the relevant lines,
./testdata/grep:and the third line is the command to exit from the editor.  Like most Unix
./testdata/grep:commands, grep accepts options in the form of command-line
./testdata/grep:lines explicitly.  Selecting all lines containing the self-standing word apple,
./testdata/grep:exactly and solely apple are selected with a line-regexp instead of
./testdata/grep:The v option reverses the sense of the match and prints all lines that do not
